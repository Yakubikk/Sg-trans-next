-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Affiliations"
(
    "Id" uuid NOT NULL,
    "Value" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Affiliations_pkey" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."Bolsters"
(
    "PartId" uuid NOT NULL,
    "ServiceLifeYears" integer,
    "ExtendedUntil" date,
    CONSTRAINT "PK_Bolsters" PRIMARY KEY ("PartId")
);

CREATE TABLE IF NOT EXISTS public."Couplers"
(
    "PartId" uuid NOT NULL,
    CONSTRAINT "PK_Couplers" PRIMARY KEY ("PartId")
);

CREATE TABLE IF NOT EXISTS public."Depots"
(
    "Id" uuid NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "Code" text COLLATE pg_catalog."default" NOT NULL,
    "Location" text COLLATE pg_catalog."default",
    "CreatedAt" timestamp with time zone NOT NULL,
    "CreatorId" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_Depots" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."Locations"
(
    "Id" uuid NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "Type" integer NOT NULL,
    "Description" text COLLATE pg_catalog."default",
    "CreatedAt" timestamp with time zone NOT NULL,
    "CreatorId" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_Locations" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."Manufacturers"
(
    "Id" uuid NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "Country" text COLLATE pg_catalog."default" NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL,
    "CreatorId" text COLLATE pg_catalog."default" NOT NULL,
    "ShortName" text STORAGE PLAIN COLLATE pg_catalog."default",
    "Code" integer NOT NULL DEFAULT 0,
    CONSTRAINT "PK_Manufacturers" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."MilageCisterns"
(
    "Id" uuid NOT NULL,
    "CisternId" uuid NOT NULL,
    "Milage" integer NOT NULL,
    "MilageNorm" integer NOT NULL,
    "RepairTypeId" uuid NOT NULL,
    "RepairDate" date NOT NULL,
    "InputModeCode" integer NOT NULL,
    "InputDate" date NOT NULL,
    "CisternNumber" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_MilageCistern" PRIMARY KEY ("Id")
        INCLUDE("Id")
);

CREATE TABLE IF NOT EXISTS public."Owners"
(
    "Id" uuid NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "UNP" text COLLATE pg_catalog."default",
    "CreatedAt" timestamp with time zone,
    "UpdatedAt" timestamp with time zone,
    "CreatorId" text COLLATE pg_catalog."default",
    "ShortName" text COLLATE pg_catalog."default" NOT NULL,
    "Address" text COLLATE pg_catalog."default",
    "TreatRepairs" boolean NOT NULL,
    "Code" integer,
    CONSTRAINT "Owners_pkey" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."PartInstallations"
(
    "Id" uuid NOT NULL,
    "PartId" uuid NOT NULL,
    "WagonId" uuid,
    "InstalledAt" timestamp with time zone NOT NULL,
    "InstalledBy" text COLLATE pg_catalog."default",
    "RemovedAt" timestamp with time zone,
    "RemovedBy" text COLLATE pg_catalog."default",
    "FromLocationId" uuid,
    "ToLocationId" uuid NOT NULL,
    "Notes" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_PartInstallations" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."PartStatus"
(
    "Id" uuid NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "Code" integer NOT NULL,
    CONSTRAINT "PartStatus_pkey" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."PartTypes"
(
    "Id" uuid NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "Code" integer NOT NULL DEFAULT 0,
    CONSTRAINT "PartTypes_pkey" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."Parts"
(
    "Id" uuid NOT NULL,
    "PartTypeId" uuid NOT NULL,
    "DepotId" uuid,
    "StampNumberId" uuid NOT NULL,
    "SerialNumber" text COLLATE pg_catalog."default",
    "ManufactureYear" date,
    "CurrentLocation" text COLLATE pg_catalog."default",
    "StatusId" uuid NOT NULL,
    "Notes" text COLLATE pg_catalog."default",
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL,
    "CreatorId" uuid NOT NULL,
    CONSTRAINT "PK_Parts" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."PermissionEntity"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_PermissionEntity" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."RailwayCisterns"
(
    "Id" uuid NOT NULL,
    "Number" text COLLATE pg_catalog."default" NOT NULL,
    "ManufacturerId" uuid NOT NULL,
    "BuildDate" date NOT NULL,
    "TareWeight" numeric NOT NULL,
    "LoadCapacity" numeric NOT NULL,
    "Length" integer NOT NULL,
    "AxleCount" integer NOT NULL,
    "Volume" numeric NOT NULL,
    "FillingVolume" numeric,
    "InitialTareWeight" numeric,
    "TypeId" uuid NOT NULL,
    "ModelId" uuid,
    "CommissioningDate" date,
    "SerialNumber" text COLLATE pg_catalog."default" NOT NULL,
    "RegistrationNumber" text COLLATE pg_catalog."default" NOT NULL,
    "RegistrationDate" date NOT NULL,
    "RegistrarId" uuid,
    "Notes" text COLLATE pg_catalog."default",
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL,
    "CreatorId" text COLLATE pg_catalog."default" NOT NULL,
    "Ownerid" uuid,
    "TechСonditions" text COLLATE pg_catalog."default",
    "Pripiska" text COLLATE pg_catalog."default",
    "ReRegistrationDate" date,
    "Pressure" numeric NOT NULL,
    "TestPressure" numeric NOT NULL DEFAULT 0,
    "Rent" text COLLATE pg_catalog."default",
    "AffiliationId" uuid NOT NULL,
    "ServiceLifeYears" integer NOT NULL DEFAULT 40,
    "PeriodMajorRepair" date,
    "PeriodPeriodicTest" date,
    "PeriodIntermediateTest" date,
    "PeriodDepotRepair" date,
    "DangerClass" integer NOT NULL DEFAULT 0,
    "Substance" text COLLATE pg_catalog."default" NOT NULL DEFAULT 'СУГ'::text,
    "TareWeight2" numeric NOT NULL DEFAULT 0,
    "TareWeight3" numeric NOT NULL DEFAULT 0,
    CONSTRAINT "PK_RailwayCisterns" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."Registrars"
(
    "Id" uuid NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_Registrars" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."RepairTypes"
(
    "Id" uuid NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "Code" text COLLATE pg_catalog."default" NOT NULL,
    "Description" text COLLATE pg_catalog."default",
    "CreatedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_RepairTypes" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."Repairs"
(
    "RepairId" uuid NOT NULL,
    "PartId" uuid NOT NULL,
    "RepairTypeId" uuid NOT NULL,
    "RepairDate" date NOT NULL,
    "DepotId" uuid,
    "NextRepairDate" date,
    "CreatedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "PK_Repairs" PRIMARY KEY ("RepairId")
);

CREATE TABLE IF NOT EXISTS public."RolePermissions"
(
    "RoleId" integer NOT NULL,
    "PermissionId" integer NOT NULL,
    CONSTRAINT "PK_RolePermissions" PRIMARY KEY ("RoleId", "PermissionId")
);

CREATE TABLE IF NOT EXISTS public."Roles"
(
    "Id" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_Roles" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."SavedFilters"
(
    "Id" uuid NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "FilterJson" text COLLATE pg_catalog."default" NOT NULL,
    "SortFieldsJson" text COLLATE pg_catalog."default" NOT NULL,
    "UserId" uuid NOT NULL,
    "CreatedAt" timestamp with time zone NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL,
    CONSTRAINT "SavedFilters_pkey" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."ShockAbsorbers"
(
    "PartId" uuid NOT NULL,
    "Model" text COLLATE pg_catalog."default",
    "ManufacturerCode" text COLLATE pg_catalog."default",
    "NextRepairDate" date,
    "ServiceLifeYears" integer,
    CONSTRAINT "PK_ShockAbsorbers" PRIMARY KEY ("PartId")
);

CREATE TABLE IF NOT EXISTS public."SideFrames"
(
    "PartId" uuid NOT NULL,
    "ServiceLifeYears" integer,
    "ExtendedUntil" date,
    CONSTRAINT "PK_SideFrames" PRIMARY KEY ("PartId")
);

CREATE TABLE IF NOT EXISTS public."StampNumbers"
(
    "Id" uuid NOT NULL,
    "Value" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "StampNumbers_pkey" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."UserRole"
(
    "UserId" uuid NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_UserRole" PRIMARY KEY ("UserId", "RoleId")
);

CREATE TABLE IF NOT EXISTS public."Users"
(
    "Id" uuid NOT NULL,
    "PasswordHash" text COLLATE pg_catalog."default" NOT NULL,
    "Email" text COLLATE pg_catalog."default" NOT NULL,
    "FirstName" text COLLATE pg_catalog."default" NOT NULL,
    "LastName" text COLLATE pg_catalog."default" NOT NULL,
    "Patronymic" text COLLATE pg_catalog."default" NOT NULL,
    "PhoneNumber" text COLLATE pg_catalog."default" NOT NULL,
    "RefreshToken" text COLLATE pg_catalog."default",
    "RefreshTokenExpiry" timestamp with time zone,
    CONSTRAINT "PK_Users" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."Vessels"
(
    "Id" uuid NOT NULL,
    "RailwayCisternId" uuid NOT NULL,
    "VesselSerialNumber" text COLLATE pg_catalog."default",
    "VesselBuildDate" date,
    CONSTRAINT "PK_Vessels" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."WagonModels"
(
    "Id" uuid NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_WagonModels" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."WagonTypes"
(
    "Id" uuid NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    "Type" text COLLATE pg_catalog."default" NOT NULL DEFAULT 0,
    CONSTRAINT "PK_WagonTypes" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."WheelPairs"
(
    "PartId" uuid NOT NULL,
    "ThicknessLeft" numeric,
    "ThicknessRight" numeric,
    "WheelType" text COLLATE pg_catalog."default",
    CONSTRAINT "PK_WheelPairs" PRIMARY KEY ("PartId")
);

CREATE TABLE IF NOT EXISTS public."__EFMigrationsHistory"
(
    "MigrationId" character varying(150) COLLATE pg_catalog."default" NOT NULL,
    "ProductVersion" character varying(32) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

CREATE TABLE IF NOT EXISTS public."справочник_вагоны"
(
    "Id" uuid NOT NULL,
    nomer integer NOT NULL,
    way character varying(255) COLLATE pg_catalog."default" NOT NULL,
    pripiska character varying(1) COLLATE pg_catalog."default",
    vladelec integer,
    koddorogi character varying(10) COLLATE pg_catalog."default",
    gruzopodemnost double precision,
    tara double precision,
    carzavnom_id character varying(8) COLLATE pg_catalog."default",
    carpostr_dt timestamp with time zone,
    carmarka_vl character varying(15) COLLATE pg_catalog."default",
    carty_vl character varying(30) COLLATE pg_catalog."default",
    cargryz_vl double precision,
    cartara_vl double precision,
    carzav_id integer,
    carosiling_vl integer,
    carvizdyx_vl character varying(10) COLLATE pg_catalog."default",
    cartorm_vl character varying(10) COLLATE pg_catalog."default",
    carpoglapar_vl character varying(20) COLLATE pg_catalog."default",
    carpoglaparadd_vl character varying(20) COLLATE pg_catalog."default",
    cartele_vl character varying(10) COLLATE pg_catalog."default",
    docautor_id character varying(20) COLLATE pg_catalog."default",
    docdate_dt timestamp with time zone,
    carosi_vl double precision,
    carkolpat_vl character varying(10) COLLATE pg_catalog."default",
    regnom character varying(15) COLLATE pg_catalog."default",
    regnom_dt timestamp with time zone,
    regnom_org character varying(20) COLLATE pg_catalog."default",
    emk_vl double precision,
    napol_vl numeric,
    caruser_vl integer,
    caruseraddnor_vl integer,
    caruserbeg_dt timestamp with time zone,
    carusernot_dt timestamp with time zone,
    create_dt timestamp with time zone,
    create_us character varying(20) COLLATE pg_catalog."default",
    modified_dt timestamp with time zone,
    modified_us character varying(20) COLLATE pg_catalog."default",
    cartara_vl_old double precision,
    ves_vl numeric,
    cartar_vl numeric,
    car_ds character varying(255) COLLATE pg_catalog."default",
    carinv character varying(50) COLLATE pg_catalog."default",
    caruseraddnor_id character varying(10) COLLATE pg_catalog."default",
    caruseraddnor_dt timestamp with time zone,
    datappe timestamp with time zone,
    deystvuet boolean NOT NULL,
    tip character varying(6) COLLATE pg_catalog."default",
    normaprobega integer,
    arenda boolean NOT NULL,
    "суг" character varying(3) COLLATE pg_catalog."default",
    "класс" character varying(1) COLLATE pg_catalog."default",
    "давление" double precision,
    CONSTRAINT "PK_справочник_вагоны" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_видыремонта"
(
    "Id" uuid NOT NULL,
    "код" integer NOT NULL,
    "видремонта" character varying(50) COLLATE pg_catalog."default",
    "примечание" character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT "PK_справочник_видыремонта" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_воздухораспределители"
(
    "Id" uuid NOT NULL,
    "код" integer NOT NULL,
    "поле1" character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT "PK_справочник_воздухораспределите" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_груз"
(
    "Id" uuid NOT NULL,
    "код" integer NOT NULL,
    "названиегруза" character varying(50) COLLATE pg_catalog."default",
    "наименование" character varying(250) COLLATE pg_catalog."default",
    "цена" double precision,
    CONSTRAINT "PK_справочник_груз" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_детали"
(
    "Id" uuid NOT NULL,
    "коддетали" smallint NOT NULL,
    "наименованиедетали" character varying(50) COLLATE pg_catalog."default",
    "деталь" smallint,
    CONSTRAINT "PK_справочник_детали" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_договоры"
(
    "Id" uuid NOT NULL,
    nomer integer NOT NULL,
    dogovor character varying(255) COLLATE pg_catalog."default",
    klient character varying(250) COLLATE pg_catalog."default",
    "valuta dogovora" character varying(3) COLLATE pg_catalog."default",
    factoborot smallint,
    straf integer,
    tipstraf character varying(4) COLLATE pg_catalog."default",
    oborotsutki smallint,
    deystvuet boolean NOT NULL,
    poputnoe smallint,
    arenda smallint,
    valutast character varying(3) COLLATE pg_catalog."default",
    CONSTRAINT "PK_справочник_договоры" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_договоры_газ"
(
    "Id" uuid NOT NULL,
    nomer integer NOT NULL,
    dogovor character varying(255) COLLATE pg_catalog."default",
    klient character varying(250) COLLATE pg_catalog."default",
    CONSTRAINT "PK_справочник_договоры_газ" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_клеймо"
(
    "Id" uuid NOT NULL,
    "тип" character varying(4) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "PK_справочник_клеймо" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_клиенты"
(
    "Id" uuid NOT NULL,
    nomer integer NOT NULL,
    klient character varying(255) COLLATE pg_catalog."default",
    unp character varying(15) COLLATE pg_catalog."default",
    adres character varying(250) COLLATE pg_catalog."default",
    krklient character varying(100) COLLATE pg_catalog."default",
    remont character varying(1) COLLATE pg_catalog."default",
    kod character varying(10) COLLATE pg_catalog."default",
    "коддепоизтхт" character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT "PK_справочник_клиенты" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_модельвц"
(
    "Id" uuid NOT NULL,
    "код" integer NOT NULL,
    "поле1" character varying(75) COLLATE pg_catalog."default",
    "поле2" double precision,
    "поле3" double precision,
    "поле4" integer,
    "поле5" double precision,
    CONSTRAINT "PK_справочник_модельвц" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_неисправности"
(
    "Id" uuid NOT NULL,
    "код" integer NOT NULL,
    "код неисправности" character varying(50) COLLATE pg_catalog."default",
    "примечание" character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT "PK_справочник_неисправности" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_поглащаппарат"
(
    "Id" uuid NOT NULL,
    "код" integer NOT NULL,
    "поле1" character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT "PK_справочник_поглащаппарат" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_поглащаппарат1"
(
    "Id" uuid NOT NULL,
    "код" integer NOT NULL,
    "поле1" character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT "PK_справочник_поглащаппарат1" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_поглащаппарат_учет"
(
    "Id" uuid NOT NULL,
    "код" integer NOT NULL,
    "заводномер" character varying(50) COLLATE pg_catalog."default",
    "тип" character varying(50) COLLATE pg_catalog."default",
    "год" timestamp with time zone,
    "списан" boolean NOT NULL,
    "вагон" character varying(8) COLLATE pg_catalog."default",
    "дата установки" timestamp with time zone,
    "хранение" integer,
    "выкачен" boolean NOT NULL,
    CONSTRAINT "PK_справочник_поглащаппарат_учет" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_работники"
(
    "Id" uuid NOT NULL,
    nomer integer NOT NULL,
    rabotnik character varying(255) COLLATE pg_catalog."default",
    dolznost character varying(30) COLLATE pg_catalog."default",
    "стном" character varying(3) COLLATE pg_catalog."default",
    CONSTRAINT "PK_справочник_работники" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_станции"
(
    "Id" uuid NOT NULL,
    "кодстанции" character varying(6) COLLATE pg_catalog."default" NOT NULL,
    "названиестанции" character varying(30) COLLATE pg_catalog."default",
    "остатоквпутим" character varying(3) COLLATE pg_catalog."default",
    "остатоквпутин" character varying(3) COLLATE pg_catalog."default",
    "остатоквпутир" character varying(3) COLLATE pg_catalog."default",
    "остатоквпутив" character varying(3) COLLATE pg_catalog."default",
    "дорога" character varying(50) COLLATE pg_catalog."default",
    "полноенаименование" character varying(50) COLLATE pg_catalog."default",
    "дорога наименование" character varying(50) COLLATE pg_catalog."default",
    "страна дороги код" character varying(6) COLLATE pg_catalog."default",
    "страна дороги" character varying(20) COLLATE pg_catalog."default",
    "действует" boolean NOT NULL,
    CONSTRAINT "PK_справочник_станции" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_стоимость"
(
    "Id" uuid NOT NULL,
    nomer integer NOT NULL,
    "сутки" smallint,
    "отпускнаяцена" double precision,
    "отпускнаяценаевро" double precision,
    "единицаизмерения" character varying(2) COLLATE pg_catalog."default",
    "отпускнаяценаевро2" double precision,
    "отпускнаяценаевро3" double precision,
    CONSTRAINT "PK_справочник_стоимость" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_стоимостьевро"
(
    "Id" uuid NOT NULL,
    nomer integer NOT NULL,
    "сутки" smallint,
    "отпускнаяцена" double precision,
    "единицаизмерения" character varying(2) COLLATE pg_catalog."default",
    CONSTRAINT "PK_справочник_стоимостьевро" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_страны"
(
    "Id" uuid NOT NULL,
    "кодстанции" integer NOT NULL,
    "названиестраны" character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT "PK_справочник_страны" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_типвц"
(
    "Id" uuid NOT NULL,
    "код" integer NOT NULL,
    "тип" character varying(4) COLLATE pg_catalog."default",
    CONSTRAINT "PK_справочник_типвц" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."справочник_тормоз"
(
    "Id" uuid NOT NULL,
    "код" integer NOT NULL,
    "поле1" character varying(255) COLLATE pg_catalog."default",
    "описание" character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT "PK_справочник_тормоз" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."спрдепо"
(
    "Id" uuid NOT NULL,
    "кодпредприятия" double precision NOT NULL,
    "наименование" character varying(255) COLLATE pg_catalog."default",
    "сокр" character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT "PK_спрдепо" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."спрдороги"
(
    "Id" uuid NOT NULL,
    "коддороги" double precision NOT NULL,
    "наименование" character varying(255) COLLATE pg_catalog."default",
    "сокр" character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT "PK_спрдороги" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."спрмодернизация"
(
    "Id" uuid NOT NULL,
    "кодмодернизации" smallint NOT NULL,
    "наименование" character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT "PK_спрмодернизация" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."спрнеисправности"
(
    "Id" uuid NOT NULL,
    "коднеисправности" integer NOT NULL,
    "наименование" character varying(255) COLLATE pg_catalog."default",
    "сокрнеисправность" character varying(255) COLLATE pg_catalog."default",
    "причина" uuid,
    CONSTRAINT "PK_спрнеисправности" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."спрпричины"
(
    "Id" uuid NOT NULL,
    "код" integer NOT NULL,
    "причина" character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT "PK_спрпричины" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."спрремонты"
(
    "Id" uuid NOT NULL,
    "кодремонта" smallint NOT NULL,
    "сокр" character varying(255) COLLATE pg_catalog."default",
    "наименование" character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT "PK_спрремонты" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."спрстанции"
(
    "Id" uuid NOT NULL,
    "кодстанции" integer NOT NULL,
    "наименование" character varying(255) COLLATE pg_catalog."default",
    "кодадминистрации" smallint,
    CONSTRAINT "PK_спрстанции" PRIMARY KEY ("Id")
);

ALTER TABLE IF EXISTS public."Bolsters"
    ADD CONSTRAINT "FK_Bolsters_Parts_PartId" FOREIGN KEY ("PartId")
    REFERENCES public."Parts" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "PK_Bolsters"
    ON public."Bolsters"("PartId");


ALTER TABLE IF EXISTS public."Couplers"
    ADD CONSTRAINT "FK_Couplers_Parts_PartId" FOREIGN KEY ("PartId")
    REFERENCES public."Parts" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "PK_Couplers"
    ON public."Couplers"("PartId");


ALTER TABLE IF EXISTS public."MilageCisterns"
    ADD CONSTRAINT "FK_CisternId_RailwayCisterns_id" FOREIGN KEY ("CisternId")
    REFERENCES public."RailwayCisterns" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."MilageCisterns"
    ADD CONSTRAINT "FK_RepairTypeId_RepairTypes_id" FOREIGN KEY ("RepairTypeId")
    REFERENCES public."RepairTypes" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."PartInstallations"
    ADD CONSTRAINT "FK_PartInstallations_Locations_FromLocationId" FOREIGN KEY ("FromLocationId")
    REFERENCES public."Locations" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "IX_PartInstallations_FromLocationId"
    ON public."PartInstallations"("FromLocationId");


ALTER TABLE IF EXISTS public."PartInstallations"
    ADD CONSTRAINT "FK_PartInstallations_Locations_ToLocationId" FOREIGN KEY ("ToLocationId")
    REFERENCES public."Locations" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_PartInstallations_ToLocationId"
    ON public."PartInstallations"("ToLocationId");


ALTER TABLE IF EXISTS public."PartInstallations"
    ADD CONSTRAINT "FK_PartInstallations_Parts_PartId" FOREIGN KEY ("PartId")
    REFERENCES public."Parts" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_PartInstallations_PartId"
    ON public."PartInstallations"("PartId");


ALTER TABLE IF EXISTS public."PartInstallations"
    ADD CONSTRAINT "FK_PartInstallations_RailwayCisterns_WagonId" FOREIGN KEY ("WagonId")
    REFERENCES public."RailwayCisterns" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "IX_PartInstallations_WagonId"
    ON public."PartInstallations"("WagonId");


ALTER TABLE IF EXISTS public."Parts"
    ADD CONSTRAINT "FK_Parts_Depots_DepotId" FOREIGN KEY ("DepotId")
    REFERENCES public."Depots" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "IX_Parts_DepotId"
    ON public."Parts"("DepotId");


ALTER TABLE IF EXISTS public."Parts"
    ADD CONSTRAINT "FK_Parts_PartStatus_StatusId" FOREIGN KEY ("StatusId")
    REFERENCES public."PartStatus" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Parts"
    ADD CONSTRAINT "FK_Parts_PartTypes_PartTypeId" FOREIGN KEY ("PartTypeId")
    REFERENCES public."PartTypes" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Parts"
    ADD CONSTRAINT "FK_Parts_StampNumbers_StampNumberId" FOREIGN KEY ("StampNumberId")
    REFERENCES public."StampNumbers" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."RailwayCisterns"
    ADD CONSTRAINT "FK_RailwayCisterns_Affiliations_AffiliationId" FOREIGN KEY ("AffiliationId")
    REFERENCES public."Affiliations" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."RailwayCisterns"
    ADD CONSTRAINT "FK_RailwayCisterns_Manufacturers_ManufacturerId" FOREIGN KEY ("ManufacturerId")
    REFERENCES public."Manufacturers" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_RailwayCisterns_ManufacturerId"
    ON public."RailwayCisterns"("ManufacturerId");


ALTER TABLE IF EXISTS public."RailwayCisterns"
    ADD CONSTRAINT "FK_RailwayCisterns_Owners_Ownerid" FOREIGN KEY ("Ownerid")
    REFERENCES public."Owners" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "fki_FK_RailwayCisterns_Owners_Ownerid"
    ON public."RailwayCisterns"("Ownerid");


ALTER TABLE IF EXISTS public."RailwayCisterns"
    ADD CONSTRAINT "FK_RailwayCisterns_Registrars_RegistrarId" FOREIGN KEY ("RegistrarId")
    REFERENCES public."Registrars" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "IX_RailwayCisterns_RegistrarId"
    ON public."RailwayCisterns"("RegistrarId");


ALTER TABLE IF EXISTS public."RailwayCisterns"
    ADD CONSTRAINT "FK_RailwayCisterns_WagonModels_ModelId" FOREIGN KEY ("ModelId")
    REFERENCES public."WagonModels" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "IX_RailwayCisterns_ModelId"
    ON public."RailwayCisterns"("ModelId");


ALTER TABLE IF EXISTS public."RailwayCisterns"
    ADD CONSTRAINT "FK_RailwayCisterns_WagonTypes_TypeId" FOREIGN KEY ("TypeId")
    REFERENCES public."WagonTypes" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_RailwayCisterns_TypeId"
    ON public."RailwayCisterns"("TypeId");


ALTER TABLE IF EXISTS public."Repairs"
    ADD CONSTRAINT "FK_Repairs_Depots_DepotId" FOREIGN KEY ("DepotId")
    REFERENCES public."Depots" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "IX_Repairs_DepotId"
    ON public."Repairs"("DepotId");


ALTER TABLE IF EXISTS public."Repairs"
    ADD CONSTRAINT "FK_Repairs_Parts_PartId" FOREIGN KEY ("PartId")
    REFERENCES public."Parts" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_Repairs_PartId"
    ON public."Repairs"("PartId");


ALTER TABLE IF EXISTS public."Repairs"
    ADD CONSTRAINT "FK_Repairs_RepairTypes_RepairTypeId" FOREIGN KEY ("RepairTypeId")
    REFERENCES public."RepairTypes" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_Repairs_RepairTypeId"
    ON public."Repairs"("RepairTypeId");


ALTER TABLE IF EXISTS public."RolePermissions"
    ADD CONSTRAINT "FK_RolePermissions_PermissionEntity_PermissionId" FOREIGN KEY ("PermissionId")
    REFERENCES public."PermissionEntity" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_RolePermissions_PermissionId"
    ON public."RolePermissions"("PermissionId");


ALTER TABLE IF EXISTS public."RolePermissions"
    ADD CONSTRAINT "FK_RolePermissions_Roles_RoleId" FOREIGN KEY ("RoleId")
    REFERENCES public."Roles" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."SavedFilters"
    ADD CONSTRAINT "FK_SavedFilters_User_UserId" FOREIGN KEY ("UserId")
    REFERENCES public."Users" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."ShockAbsorbers"
    ADD CONSTRAINT "FK_ShockAbsorbers_Parts_PartId" FOREIGN KEY ("PartId")
    REFERENCES public."Parts" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "PK_ShockAbsorbers"
    ON public."ShockAbsorbers"("PartId");


ALTER TABLE IF EXISTS public."SideFrames"
    ADD CONSTRAINT "FK_SideFrames_Parts_PartId" FOREIGN KEY ("PartId")
    REFERENCES public."Parts" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "PK_SideFrames"
    ON public."SideFrames"("PartId");


ALTER TABLE IF EXISTS public."UserRole"
    ADD CONSTRAINT "FK_UserRole_Roles_RoleId" FOREIGN KEY ("RoleId")
    REFERENCES public."Roles" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_UserRole_RoleId"
    ON public."UserRole"("RoleId");


ALTER TABLE IF EXISTS public."UserRole"
    ADD CONSTRAINT "FK_UserRole_Users_UserId" FOREIGN KEY ("UserId")
    REFERENCES public."Users" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Vessels"
    ADD CONSTRAINT "FK_Vessels_RailwayCisterns_RailwayCisternId" FOREIGN KEY ("RailwayCisternId")
    REFERENCES public."RailwayCisterns" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "IX_Vessels_RailwayCisternId"
    ON public."Vessels"("RailwayCisternId");


ALTER TABLE IF EXISTS public."WheelPairs"
    ADD CONSTRAINT "FK_WheelPairs_Parts_PartId" FOREIGN KEY ("PartId")
    REFERENCES public."Parts" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "PK_WheelPairs"
    ON public."WheelPairs"("PartId");


ALTER TABLE IF EXISTS public."спрнеисправности"
    ADD CONSTRAINT "FK_спрнеисправности_спрпричины_при" FOREIGN KEY ("причина")
    REFERENCES public."спрпричины" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "IX_спрнеисправности_причина"
    ON public."спрнеисправности"("причина");

END;